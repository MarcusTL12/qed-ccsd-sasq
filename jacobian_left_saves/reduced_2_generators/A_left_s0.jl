let
    func = FortranFunction(("sigma", String[]))
    bγ2 = ("bγ2", true)
    d_ov = ("d_ov", true)
    s₂_vo = ("wf%s1_2", false)
    bs_vo = ("bs_vo", true)
    d_vv = ("d_vv", true)
    s₁_vo = ("wf%s1", false)
    d_oo = ("d_oo", true)
    s₁_vovo = ("s₁_vovo", true, [[1, 2, 3, 4], [3, 4, 1, 2]])
    bs2_vovo = ("bs2_vovo", true, [[1, 2, 3, 4], [3, 4, 1, 2]])
    s₂_vovo = ("s₂_vovo", true, [[1, 2, 3, 4], [3, 4, 1, 2]])
    t_vovo = ("t_vovo", true, [[1, 2, 3, 4], [3, 4, 1, 2]])
    update_code!(func, ein",ia,ai->", 4//1, [bγ2, d_ov, s₂_vo])
    update_code!(func, ein"ai,ab,bi->", 1//1, [bs_vo, d_vv, s₁_vo])
    update_code!(func, ein"ai,ji,aj->", -1//1, [bs_vo, d_oo, s₁_vo])
    update_code!(func, ein"ai,jb,aibj->", 2//1, [bs_vo, d_ov, s₁_vovo])
    update_code!(func, ein"ai,jb,ajbi->", -1//1, [bs_vo, d_ov, s₁_vovo])
    update_code!(func, ein"aibj,ac,bjci->", 2//1, [bs2_vovo, d_vv, s₂_vovo])
    update_code!(func, ein"aibj,ki,akbj->", -2//1, [bs2_vovo, d_oo, s₂_vovo])
    update_code!(func, ein"aibj,kc,ak,bjci->", -2//1, [bs2_vovo, d_ov, s₁_vo, s₁_vovo])
    update_code!(func, ein"aibj,kc,ci,akbj->", -2//1, [bs2_vovo, d_ov, s₁_vo, s₁_vovo])
    update_code!(func, ein"aibj,kc,ak,bjci->", -2//1, [bs2_vovo, d_ov, s₂_vo, t_vovo])
    update_code!(func, ein"aibj,kc,ci,akbj->", -2//1, [bs2_vovo, d_ov, s₂_vo, t_vovo])
    finalize_eT_function(func, "jacobian_transpose_s0", "qed_ccsd_2")
end

