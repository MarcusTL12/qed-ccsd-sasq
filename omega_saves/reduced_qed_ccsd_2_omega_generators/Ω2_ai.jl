let
    func = FortranFunction(("omega_vo", ["v", "o"]))
    s₂_vo = ("wf%s1_2", false)
    ω = ("wf%qed%frequencies(wf%mode)", false)
    F_vv = ("F_vv", true)
    F_oo = ("F_oo", true)
    d_vv = ("d_vv", true)
    s₁_vo = ("wf%s1", false)
    d_oo = ("d_oo", true)
    γ₂ = ("wf%s0_2", false)
    γ₁ = ("wf%s0", false)
    F_ov = ("F_ov", true)
    v₂_vovo = ("v_2_vovo", true, [[1, 2, 3, 4], [3, 4, 1, 2]])
    L_voov = ("L_voov", true)
    d_ov = ("d_ov", true)
    v₁_vovo = ("v_vovo", true, [[1, 2, 3, 4], [3, 4, 1, 2]])
    g_vvov = ("g_vvov", true)
    g_ooov = ("g_ooov", true)
    L_vvov = ("L_vvov", true)
    L_ooov = ("L_ooov", true)
    L_ovov = ("L_ovov", true, [[1, 2, 3, 4], [3, 4, 1, 2]])
    u_vovo = ("wf%u_aibj", false, [[1, 2, 3, 4], [3, 4, 1, 2]])
    g_ovov = ("g_ovov", true, [[1, 2, 3, 4], [3, 4, 1, 2]])
    update_code!(func, ein"ai,->ai", 4//1, [s₂_vo, ω])
    update_code!(func, ein"ab,bi->ai", 2//1, [F_vv, s₂_vo])
    update_code!(func, ein"ji,aj->ai", -2//1, [F_oo, s₂_vo])
    update_code!(func, ein"ab,bi->ai", 2//1, [d_vv, s₁_vo])
    update_code!(func, ein"ji,aj->ai", -2//1, [d_oo, s₁_vo])
    update_code!(func, ein"ab,bi,->ai", 4//1, [d_vv, s₁_vo, γ₂])
    update_code!(func, ein"ji,aj,->ai", -4//1, [d_oo, s₁_vo, γ₂])
    update_code!(func, ein"ab,bi,->ai", 2//1, [d_vv, s₂_vo, γ₁])
    update_code!(func, ein"ji,aj,->ai", -2//1, [d_oo, s₂_vo, γ₁])
    update_code!(func, ein"jb,aibj->ai", 2//1, [F_ov, v₂_vovo])
    update_code!(func, ein"aijb,bj->ai", 2//1, [L_voov, s₂_vo])
    update_code!(func, ein"jb,aibj->ai", 2//1, [d_ov, v₁_vovo])
    update_code!(func, ein"jb,aj,bi->ai", -2//1, [F_ov, s₁_vo, s₁_vo])
    update_code!(func, ein"jb,ai,bj->ai", 4//1, [d_ov, s₁_vo, s₂_vo])
    update_code!(func, ein"jb,aj,bi->ai", -6//1, [d_ov, s₁_vo, s₂_vo])
    update_code!(func, ein"jb,bi,aj->ai", -6//1, [d_ov, s₁_vo, s₂_vo])
    update_code!(func, ein"jb,bj,ai->ai", 8//1, [d_ov, s₁_vo, s₂_vo])
    update_code!(func, ein"jb,aibj,->ai", 4//1, [d_ov, v₁_vovo, γ₂])
    update_code!(func, ein"jb,aibj,->ai", 2//1, [d_ov, v₂_vovo, γ₁])
    update_code!(func, ein"jb,aj,bi,->ai", -2//1, [d_ov, s₁_vo, s₁_vo, γ₁])
    update_code!(func, ein"abjc,bicj->ai", 2//1, [g_vvov, v₂_vovo])
    update_code!(func, ein"jikb,ajbk->ai", -2//1, [g_ooov, v₂_vovo])
    update_code!(func, ein"abjc,bi,cj->ai", 2//1, [L_vvov, s₁_vo, s₁_vo])
    update_code!(func, ein"jikb,aj,bk->ai", -2//1, [L_ooov, s₁_vo, s₁_vo])
    update_code!(func, ein"jbkc,bj,aick->ai", 2//1, [L_ovov, s₁_vo, v₁_vovo])
    update_code!(func, ein"jbkc,bj,aick->ai", 2//1, [L_ovov, s₂_vo, u_vovo])
    update_code!(func, ein"jbkc,aj,bick->ai", -2//1, [g_ovov, s₁_vo, v₁_vovo])
    update_code!(func, ein"jbkc,bi,ajck->ai", -2//1, [g_ovov, s₁_vo, v₁_vovo])
    update_code!(func, ein"jbkc,aj,bick->ai", -2//1, [g_ovov, s₂_vo, u_vovo])
    update_code!(func, ein"jbkc,bi,ajck->ai", -2//1, [g_ovov, s₂_vo, u_vovo])
    finalize_eT_function(func, "omega_2_ai", "qed_ccsd_2")
end

